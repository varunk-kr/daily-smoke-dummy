name: Sonar Scanner
on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main
      - develop
      - feature/**
env:
  SONAR_HOST_URL_REF: 'http://sonar.kroger.com/sonar'
  SONAR_TOKEN_REF: ${{ secrets.SONAR_TOKEN }}
  ARTIFACTORY_EDGE_USERNAME_REF: ${{ secrets.ARTIFACTORY_EDGE_USERNAME }}
  ARTIFACTORY_EDGE_TOKEN_REF:  ${{ secrets.ARTIFACTORY_EDGE_TOKEN }}

jobs:
  run_sonar_scanner:
    name: Maven build, Sonar Scan
    runs-on: [self-hosted,kubernetes]
    container: maven:3.8.5-openjdk-11
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          overwrite-settings: true

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Maven build
        run: mvn clean test-compile --settings settings.xml

      # sonarsource/sonarqube-quality-gate-action expects `jq` but won't find it on kroger self-hosted k8s runners
      - name: Install jq
        shell: sh
        run: |
          if ! [ -x "$(command -v jq)" ]; then
            wget -O /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            chmod +x /usr/local/bin/jq
          fi
          if ! [ -x "$(command -v jq)" ]; then
            echo 'Error: jq is not installed/failed to install.' >&2
            exit 1
          fi
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2.0.2
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN_REF }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL_REF }}

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 6000
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN_REF }}
